<Window x:Class="DflatCoreWPF.Views.JobMonitorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:s="clr-namespace:System;assembly=System.Runtime"
        xmlns:local="clr-namespace:DflatCoreWPF.Views"
        mc:Ignorable="d"
        xmlns:viewModels="clr-namespace:DflatCoreWPF.ViewModels"
        xmlns:models="clr-namespace:Dflat.Application.Models;assembly=Dflat.Application"
        d:DataContext="{d:DesignInstance viewModels:JobMonitorViewModel}"
        Name="JobMonitorWindow"
        Title="Job Monitor" Height="600" Width="1000">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>
        <ControlTemplate x:Key="HyperlinkLikeButtonTemplate" TargetType="{x:Type Button}">
            <TextBlock x:Name="innerText" Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" Cursor="Hand" >
                <ContentPresenter />
            </TextBlock>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="true">
                    <Setter TargetName="innerText" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter TargetName="innerText" Property="TextDecorations" Value="Underline" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="HyperlinkLikeButton" TargetType="{x:Type Button}">
            <Setter Property="Template" Value="{StaticResource HyperlinkLikeButtonTemplate}" />
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding InitializeCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <!-- Menu -->
            <RowDefinition Height="Auto" />
            <!-- Content -->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem Header="View">
                <MenuItem Header="Show only type">
                    <MenuItem Header="All job types" Command="{Binding DisplayJobTypeCommand}"  CommandParameter="{x:Static models:JobType.None}" IsChecked="{Binding DisplayAllTypes, Mode=OneWay}"/>
                    <Separator />
                    <MenuItem Header="File Source Folder Scans" Command="{Binding DisplayJobTypeCommand}" CommandParameter="{x:Static models:JobType.FileSourceFolderScanJob}" IsChecked="{Binding DisplayFileSourceFolderScanJob, Mode=OneWay}"/>
                    <MenuItem Header="MD5 Jobs" Command="{Binding DisplayJobTypeCommand}" CommandParameter="{x:Static models:JobType.MD5Job}" IsChecked="{Binding DisplayMD5Job, Mode=OneWay}"/>
                </MenuItem>
                <MenuItem Header="Show only status">
                    <MenuItem Header="All statuses"           Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.None}" IsChecked="{Binding DisplayAllStatuses, Mode=OneWay}" />
                    <Separator />
                    <MenuItem Header="Queueud"                Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Queued}" IsChecked="{Binding DisplayQueuedJobs, Mode=OneWay}" />
                    <MenuItem Header="Ready"                  Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Ready}" IsChecked="{Binding DisplayReadyJobs, Mode=OneWay}" />
                    <MenuItem Header="Running"                Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Running}" IsChecked="{Binding DisplayRunningJobs, Mode=OneWay}" />
                    <MenuItem Header="Successful"             Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Success}" IsChecked="{Binding DisplaySuccessfulJobs, Mode=OneWay}" />
                    <MenuItem Header="Successful with Errors" Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.SuccessWithErrors}" IsChecked="{Binding DisplaySuccessWithErrorJobs, Mode=OneWay}" />
                    <MenuItem Header="Errored"                Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Error}" IsChecked="{Binding DisplayErroredJobs, Mode=OneWay}" />
                    <MenuItem Header="Cancelled"              Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Cancelled}" IsChecked="{Binding DisplayCancelledJobs, Mode=OneWay}" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Processing">
                <MenuItem Header="Start Processing" Command="{Binding ChangeProcessingStatusCommand}" CommandParameter="{StaticResource True}" IsChecked="{Binding ProcessingIsEnabled, Mode=OneWay}" />
                <MenuItem Header="Stop Processing"  Command="{Binding ChangeProcessingStatusCommand}" CommandParameter="{StaticResource False}" IsChecked="{Binding ProcessingIsStopped, Mode=OneWay}" />
            </MenuItem>

        </Menu>
        <Border Grid.Row="1" Grid.Column="0" Margin="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <DataGrid Grid.Row="0"
                          Grid.Column="0"
                          AllowDrop="False"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          CanUserResizeColumns="True"
                          CanUserReorderColumns="False"
                          CanUserSortColumns="False"
                          IsManipulationEnabled="False"
                          IsReadOnly="True" 
                          ItemsSource="{Binding JobInfoList}"
                          SelectedItem="{Binding SelectedJobInfo}"
                          SelectionMode="Single"
                          SelectionUnit="FullRow"
                          IsSynchronizedWithCurrentItem="True"
                          >
                    <DataGrid.Resources>
                        <ContextMenu x:Key="JobContextMenu"  DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="Restart Jobs" Command="{Binding RestartSelectedJobsCommand}" IsEnabled="{Binding CanRestartSelectedJobs}"/>
                            <MenuItem Header="Cancel Jobs" Command="{Binding CancelSelectedJobsCommand}" IsEnabled="{Binding CanCancelSelectedJobs}"/>
                            <Separator />
                            <MenuItem Header="Remove Jobs" Command="{Binding RemoveSelectedJobsCommand}"/>
                        </ContextMenu>
                    </DataGrid.Resources>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <Setter Property="Tag" Value="{Binding ElementName=JobMonitorWindow, Path=DataContext}" />
                            <Setter Property="ContextMenu" Value="{StaticResource JobContextMenu}" />
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.InputBindings>
                        <MouseBinding Gesture="LeftDoubleClick"
                                      Command="{Binding ViewJobDetailsCommand}"
                            />

                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Job ID" Binding="{Binding JobID}"/>
                        <DataGridTextColumn Header="Type" Binding="{Binding JobType}"/>
                        <DataGridTextColumn Header="Date Created" Binding="{Binding CreationTime}"/>
                        <DataGridTextColumn Header="Status" Binding="{Binding Status}"/>
                        <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                    </DataGrid.Columns>

                </DataGrid>
                
                <!-- Side panel -->
                <Grid Grid.Row="0" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" MinWidth="100" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="10 0 0 0" Grid.Row="0" Grid.Column="0" Text="Jobs" FontWeight="Bold" />
                    <Separator Margin="10 0 10 5" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"/>
                    <TextBlock Margin="20 0 0 5"  Grid.Row="2" Grid.Column="0" Text="Queued:" />
                    <TextBlock Margin="20 0 0 5"  Grid.Row="3" Grid.Column="0" Text="Ready:" />
                    <TextBlock Margin="20 0 0 5"  Grid.Row="4" Grid.Column="0" Text="Running:" />
                    <TextBlock Margin="20 0 0 0"  Grid.Row="5" Grid.Column="0" Text="Successful:" />
                    <TextBlock Margin="20 0 0 5"  Grid.Row="6" Grid.Column="0" Text="(w/ errors):" />
                    <TextBlock Margin="20 0 0 5"  Grid.Row="7" Grid.Column="0" Text="Ended in error:" />
                    <TextBlock Margin="20 0 0 5"  Grid.Row="8" Grid.Column="0" Text="Cancelled:" />

                    <Button Style="{StaticResource HyperlinkLikeButton}" Margin="20 0 10 0"  Grid.Row="0" Grid.Column="1" Content="0" Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.None}" />
                    <Button Style="{StaticResource HyperlinkLikeButton}" Margin="20 0 10 0"  Grid.Row="2" Grid.Column="1" Content="0" Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Queued}" />
                    <Button Style="{StaticResource HyperlinkLikeButton}" Margin="20 0 10 0"  Grid.Row="3" Grid.Column="1" Content="0" Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Ready}"  />
                    <Button Style="{StaticResource HyperlinkLikeButton}" Margin="20 0 10 0"  Grid.Row="4" Grid.Column="1" Content="0" Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Running}"  />
                    <Button Style="{StaticResource HyperlinkLikeButton}" Margin="20 0 10 0"  Grid.Row="5" Grid.Column="1" Content="0" Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Success}"  />
                    <Button Style="{StaticResource HyperlinkLikeButton}" Margin="20 0 10 0"  Grid.Row="6" Grid.Column="1" Content="0" Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.SuccessWithErrors}" />
                    <Button Style="{StaticResource HyperlinkLikeButton}" Margin="20 0 10 0"  Grid.Row="7" Grid.Column="1" Content="0" Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Error}"  />
                    <Button Style="{StaticResource HyperlinkLikeButton}" Margin="20 0 10 0"  Grid.Row="8" Grid.Column="1" Content="0" Command="{Binding DisplayJobStatusCommand}" CommandParameter="{x:Static models:JobStatus.Cancelled}"  />
                </Grid>

                <!-- Bottom row buttons -->
                <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0 10">
                    <Button Content="Clear Successful Jobs" />
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>
