<Window x:Class="DflatCoreWPF.Views.FileSourceManagerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:DflatCoreWPF.Views"
        mc:Ignorable="d"
        xmlns:viewModels="clr-namespace:DflatCoreWPF.ViewModels"
        xmlns:models="clr-namespace:Dflat.Application.Models;assembly=Dflat.Application"
        d:DataContext="{d:DesignInstance viewModels:FileSourceManagerViewModel}"
        Title="File Source Manager"
        Height="300"
        Width="600"
        MinHeight="300"
        MinWidth="600"
        Name="FileSourceManagerWindow">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitializeCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <!-- Overlay -->
        <Grid Panel.ZIndex="1000" Background="Black" Opacity="0.2" Visibility="{Binding EnableOverlay, Converter={StaticResource VisibilityConverter}, FallbackValue=Collapsed}" />

        <!-- Actual content -->
        <Border Margin="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Margin="0 0 0 10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- List of Folders Label -->
                        <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="File Source Folders" />

                        <!-- List of Folders -->
                        <Border Grid.Row="1" Grid.Column="0">
                            <ListBox ItemsSource="{Binding FileSourceFolders}" SelectedItem="{Binding SelectedFileSourceFolder}">
                                <ListBox.Resources>
                                    <ContextMenu x:Key="FileSourceFolderContextMenu" DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Header="Queue Folder Scan" Command="{Binding QueueFolderScanCommand}" />
                                        <Separator />
                                        <MenuItem Header="Save" Command="{Binding SaveSelectedCommand}" IsEnabled="{Binding CanSaveSelected}"/>
                                    </ContextMenu>
                                </ListBox.Resources>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Tag" Value="{Binding ElementName=FileSourceManagerWindow, Path=DataContext}" />
                                        <Setter Property="ContextMenu" Value="{StaticResource FileSourceFolderContextMenu}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChanged}" Value="True">
                                                <Setter Property="FontStyle" Value="Italic" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChanged}" Value="False">
                                                <Setter Property="FontStyle" Value="Normal" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:FileSourceFolder}">
                                        <Grid Background="Transparent">
                                            <Grid.InputBindings>
                                                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                                            </Grid.InputBindings>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="*" Visibility="{Binding IsChanged, Converter={StaticResource VisibilityConverter}}" />
                                            <TextBlock Grid.Column="1" Margin="0 0 10 0" Text="{Binding Name}" />
                                            <TextBlock Grid.Column="3" Margin="0 0 10 0">(<Run Text="{Binding Path}" />)</TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>

                        <!-- Edit Controls -->
                        <Border Grid.Row="1" Grid.Column="1" Padding="10 0 0 0" MinWidth="225">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="50"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0" Content="Add" Command="{Binding AddCommand}" />
                                    <Button Grid.Column="1" Content="Edit" Command="{Binding EditCommand}" IsEnabled="{Binding CanEdit}" />
                                    <Separator Grid.Column="2" Style="{StaticResource {x:Static StatusBar.SeparatorStyleKey}}"/>


                                    <Button Grid.Column="3" Content="Remove" Command="{Binding RemoveCommand}" IsEnabled="{Binding CanEdit}" />
                                </Grid>

                                <StackPanel Visibility="{Binding CanEdit, Converter={StaticResource VisibilityConverter}, FallbackValue=Collapsed}">
                                    <TextBlock>Temporary Media: <Run Text="{Binding SelectedFileSourceFolder.IsTemporaryMedia}" /></TextBlock>
                                    <TextBlock>Last Scanned:  <Run Text="{Binding SelectedFileSourceFolder.LastScanStart}" /></TextBlock>
                                    <TextBlock>Subfolders Excluded: <Run Text="{Binding SelectedFileSourceFolderExcludeCount, Mode=OneWay}" /></TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </Border>



                    </Grid>
                </Border>

                <!-- Status row and Save/Cancel buttons -->
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="60" />
                    </Grid.ColumnDefinitions>

                    <!-- Number of folders -->
                    <TextBlock Text="{Binding Count}" VerticalAlignment="Center" />

                    <!-- Save and Cancel buttons -->
                    <Button Grid.Column="1" Margin="0 0 5 0" Command="{Binding CancelCommand}" Content="{Binding Path=CancelButtonText, Mode=OneWay, FallbackValue='Cancel'}" />

                    <Button Grid.Column="2" Margin="5 0 0 0" Command="{Binding SaveCommand}" Content="Save" IsEnabled="{Binding CanSave}"/>

                </Grid>


            </Grid>
        </Border>
    </Grid>
</Window>
